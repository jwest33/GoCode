# Local LLM Configuration
llm:
  endpoint: "http://localhost:8080/v1"
  api_key: "secret"
  model: "qwen"
  temperature: 0.7
  max_tokens: 4096
  context_window: 102400

  # llama-server Auto-Management
  auto_manage: true  # If true, gocode will start/stop llama-server automatically
  startup_timeout: 60  # Seconds to wait for llama-server to become ready

  # llama-server Configuration (only used if auto_manage is true)
  server:
    model_path: "C:\\models\\Qwen3-Yoyo-V3-42B-A3B-Thinking-TOTAL-RECALL-ST-TNG-III.i1-Q4_K_M\\Qwen3-Yoyo-V3-42B-A3B-Thinking-TOTAL-RECALL-ST-TNG-III.i1-Q4_K_M.gguf"
    host: "0.0.0.0"
    port: 8080
    ctx_size: 102400
    flash_attn: true
    jinja: true
    cache_type_k: "q8_0"
    cache_type_v: "q8_0"
    batch_size: 1024
    ubatch_size: 512
    n_cpu_moe: 28
    n_gpu_layers: 99
    repeat_last_n: 192
    repeat_penalty: 1.05
    threads: 16

# Tool Configuration
tools:
  enabled:
    - read
    - write
    - edit
    - glob
    - grep
    - bash
    - todo_write
    - web_fetch
    - web_search
    - find_definition
    - find_references
    - list_symbols

# Confirmation Policies
confirmation:
  mode: "interactive" # interactive, auto, destructive_only
  auto_approve_tools:
    - read
    - glob
    - grep
  always_confirm_tools:
    - write
    - edit
    - bash

# Logging Configuration
logging:
  format: "jsonl"
  directory: "logs"
  level: "info"
  log_tool_results: true
  log_reasoning: true

# Embeddings Configuration (for semantic search)
embeddings:
  enabled: false  # Set to true and start embedding server on port 8081
  endpoint: "http://localhost:8081"
  dimension: 384  # For nomic-embed-text or bge-small-en-v1.5
  db_path: "embeddings.db"

# Retrieval Configuration (hybrid search)
retrieval:
  enabled: false  # Set to true to enable automatic context retrieval
  weights:
    bm25: 0.4      # Keyword search weight
    semantic: 0.5  # Semantic search weight (requires embeddings)
    trigram: 0.1   # Fuzzy matching weight

# LSP Configuration (code navigation)
lsp:
  enabled: true  # Set to true to enable LSP-based code navigation
  servers:
    go:
      command: "gopls"
      args: []
    python:
      command: "pylsp"
      args: []
    typescript:
      command: "typescript-language-server"
      args: ["--stdio"]

# Checkpoint Configuration (session persistence)
checkpoint:
  enabled: false  # Set to true to enable session checkpointing
  db_path: "checkpoints.db"
  auto_save: true
  save_interval: 5  # Auto-save every N messages

# Memory Configuration (long-term memory)
memory:
  enabled: false  # Set to true to enable long-term memory
  db_path: "memory.db"

# Telemetry Configuration (OpenTelemetry tracing)
telemetry:
  enabled: false  # Set to true to enable telemetry
  service_name: "gocode-agent"
  db_path: "traces.db"

# Evaluation Configuration (test execution & metrics)
evaluation:
  enabled: false  # Set to true to enable evaluation framework
  track_metrics: true
